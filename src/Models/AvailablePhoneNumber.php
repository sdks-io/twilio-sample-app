<?php

declare(strict_types=1);

/*
 * TwilioMessagingSMSLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TwilioMessagingSMSLib\Models;

use stdClass;

class AvailablePhoneNumber implements \JsonSerializable
{
    /**
     * @var string
     */
    private $addressRequirements;

    /**
     * @var bool
     */
    private $beta;

    /**
     * @var array
     */
    private $capabilities;

    /**
     * @var string
     */
    private $friendlyName;

    /**
     * @var string
     */
    private $isoCountry;

    /**
     * @var string
     */
    private $lata;

    /**
     * @var float
     */
    private $latitude;

    /**
     * @var string
     */
    private $locality;

    /**
     * @var float
     */
    private $longitude;

    /**
     * @var string
     */
    private $phoneNumber;

    /**
     * @var string
     */
    private $postalCode;

    /**
     * @var string
     */
    private $rateCenter;

    /**
     * @var string
     */
    private $region;

    /**
     * @param string $addressRequirements
     * @param bool $beta
     * @param array $capabilities
     * @param string $friendlyName
     * @param string $isoCountry
     * @param string $lata
     * @param float $latitude
     * @param string $locality
     * @param float $longitude
     * @param string $phoneNumber
     * @param string $postalCode
     * @param string $rateCenter
     * @param string $region
     */
    public function __construct(
        string $addressRequirements,
        bool $beta,
        array $capabilities,
        string $friendlyName,
        string $isoCountry,
        string $lata,
        float $latitude,
        string $locality,
        float $longitude,
        string $phoneNumber,
        string $postalCode,
        string $rateCenter,
        string $region
    ) {
        $this->addressRequirements = $addressRequirements;
        $this->beta = $beta;
        $this->capabilities = $capabilities;
        $this->friendlyName = $friendlyName;
        $this->isoCountry = $isoCountry;
        $this->lata = $lata;
        $this->latitude = $latitude;
        $this->locality = $locality;
        $this->longitude = $longitude;
        $this->phoneNumber = $phoneNumber;
        $this->postalCode = $postalCode;
        $this->rateCenter = $rateCenter;
        $this->region = $region;
    }

    /**
     * Returns Address Requirements.
     */
    public function getAddressRequirements(): string
    {
        return $this->addressRequirements;
    }

    /**
     * Sets Address Requirements.
     *
     * @required
     * @maps address_requirements
     */
    public function setAddressRequirements(string $addressRequirements): void
    {
        $this->addressRequirements = $addressRequirements;
    }

    /**
     * Returns Beta.
     */
    public function getBeta(): bool
    {
        return $this->beta;
    }

    /**
     * Sets Beta.
     *
     * @required
     * @maps beta
     */
    public function setBeta(bool $beta): void
    {
        $this->beta = $beta;
    }

    /**
     * Returns Capabilities.
     */
    public function getCapabilities(): array
    {
        return $this->capabilities;
    }

    /**
     * Sets Capabilities.
     *
     * @required
     * @maps capabilities
     */
    public function setCapabilities(array $capabilities): void
    {
        $this->capabilities = $capabilities;
    }

    /**
     * Returns Friendly Name.
     */
    public function getFriendlyName(): string
    {
        return $this->friendlyName;
    }

    /**
     * Sets Friendly Name.
     *
     * @required
     * @maps friendly_name
     */
    public function setFriendlyName(string $friendlyName): void
    {
        $this->friendlyName = $friendlyName;
    }

    /**
     * Returns Iso Country.
     */
    public function getIsoCountry(): string
    {
        return $this->isoCountry;
    }

    /**
     * Sets Iso Country.
     *
     * @required
     * @maps iso_country
     */
    public function setIsoCountry(string $isoCountry): void
    {
        $this->isoCountry = $isoCountry;
    }

    /**
     * Returns Lata.
     */
    public function getLata(): string
    {
        return $this->lata;
    }

    /**
     * Sets Lata.
     *
     * @required
     * @maps lata
     */
    public function setLata(string $lata): void
    {
        $this->lata = $lata;
    }

    /**
     * Returns Latitude.
     */
    public function getLatitude(): float
    {
        return $this->latitude;
    }

    /**
     * Sets Latitude.
     *
     * @required
     * @maps latitude
     */
    public function setLatitude(float $latitude): void
    {
        $this->latitude = $latitude;
    }

    /**
     * Returns Locality.
     */
    public function getLocality(): string
    {
        return $this->locality;
    }

    /**
     * Sets Locality.
     *
     * @required
     * @maps locality
     */
    public function setLocality(string $locality): void
    {
        $this->locality = $locality;
    }

    /**
     * Returns Longitude.
     */
    public function getLongitude(): float
    {
        return $this->longitude;
    }

    /**
     * Sets Longitude.
     *
     * @required
     * @maps longitude
     */
    public function setLongitude(float $longitude): void
    {
        $this->longitude = $longitude;
    }

    /**
     * Returns Phone Number.
     */
    public function getPhoneNumber(): string
    {
        return $this->phoneNumber;
    }

    /**
     * Sets Phone Number.
     *
     * @required
     * @maps phone_number
     */
    public function setPhoneNumber(string $phoneNumber): void
    {
        $this->phoneNumber = $phoneNumber;
    }

    /**
     * Returns Postal Code.
     */
    public function getPostalCode(): string
    {
        return $this->postalCode;
    }

    /**
     * Sets Postal Code.
     *
     * @required
     * @maps postal_code
     */
    public function setPostalCode(string $postalCode): void
    {
        $this->postalCode = $postalCode;
    }

    /**
     * Returns Rate Center.
     */
    public function getRateCenter(): string
    {
        return $this->rateCenter;
    }

    /**
     * Sets Rate Center.
     *
     * @required
     * @maps rate_center
     */
    public function setRateCenter(string $rateCenter): void
    {
        $this->rateCenter = $rateCenter;
    }

    /**
     * Returns Region.
     */
    public function getRegion(): string
    {
        return $this->region;
    }

    /**
     * Sets Region.
     *
     * @required
     * @maps region
     */
    public function setRegion(string $region): void
    {
        $this->region = $region;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['address_requirements'] = $this->addressRequirements;
        $json['beta']                 = $this->beta;
        $json['capabilities']         = $this->capabilities;
        $json['friendly_name']        = $this->friendlyName;
        $json['iso_country']          = $this->isoCountry;
        $json['lata']                 = $this->lata;
        $json['latitude']             = $this->latitude;
        $json['locality']             = $this->locality;
        $json['longitude']            = $this->longitude;
        $json['phone_number']         = $this->phoneNumber;
        $json['postal_code']          = $this->postalCode;
        $json['rate_center']          = $this->rateCenter;
        $json['region']               = $this->region;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
