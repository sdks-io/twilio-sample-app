<?php

declare(strict_types=1);

/*
 * TwilioMessagingSMSLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TwilioMessagingSMSLib\Models;

use stdClass;

class OK1 implements \JsonSerializable
{
    /**
     * @var int
     */
    private $end;

    /**
     * @var string
     */
    private $firstPageUri;

    /**
     * @var Message[]
     */
    private $messages;

    /**
     * @var string
     */
    private $nextPageUri;

    /**
     * @var int
     */
    private $page;

    /**
     * @var int
     */
    private $pageSize;

    /**
     * @var string
     */
    private $previousPageUri;

    /**
     * @var int
     */
    private $start;

    /**
     * @var string
     */
    private $uri;

    /**
     * @param int $end
     * @param string $firstPageUri
     * @param Message[] $messages
     * @param string $nextPageUri
     * @param int $page
     * @param int $pageSize
     * @param string $previousPageUri
     * @param int $start
     * @param string $uri
     */
    public function __construct(
        int $end,
        string $firstPageUri,
        array $messages,
        string $nextPageUri,
        int $page,
        int $pageSize,
        string $previousPageUri,
        int $start,
        string $uri
    ) {
        $this->end = $end;
        $this->firstPageUri = $firstPageUri;
        $this->messages = $messages;
        $this->nextPageUri = $nextPageUri;
        $this->page = $page;
        $this->pageSize = $pageSize;
        $this->previousPageUri = $previousPageUri;
        $this->start = $start;
        $this->uri = $uri;
    }

    /**
     * Returns End.
     */
    public function getEnd(): int
    {
        return $this->end;
    }

    /**
     * Sets End.
     *
     * @required
     * @maps end
     */
    public function setEnd(int $end): void
    {
        $this->end = $end;
    }

    /**
     * Returns First Page Uri.
     */
    public function getFirstPageUri(): string
    {
        return $this->firstPageUri;
    }

    /**
     * Sets First Page Uri.
     *
     * @required
     * @maps first_page_uri
     */
    public function setFirstPageUri(string $firstPageUri): void
    {
        $this->firstPageUri = $firstPageUri;
    }

    /**
     * Returns Messages.
     *
     * @return Message[]
     */
    public function getMessages(): array
    {
        return $this->messages;
    }

    /**
     * Sets Messages.
     *
     * @required
     * @maps messages
     *
     * @param Message[] $messages
     */
    public function setMessages(array $messages): void
    {
        $this->messages = $messages;
    }

    /**
     * Returns Next Page Uri.
     */
    public function getNextPageUri(): string
    {
        return $this->nextPageUri;
    }

    /**
     * Sets Next Page Uri.
     *
     * @required
     * @maps next_page_uri
     */
    public function setNextPageUri(string $nextPageUri): void
    {
        $this->nextPageUri = $nextPageUri;
    }

    /**
     * Returns Page.
     */
    public function getPage(): int
    {
        return $this->page;
    }

    /**
     * Sets Page.
     *
     * @required
     * @maps page
     */
    public function setPage(int $page): void
    {
        $this->page = $page;
    }

    /**
     * Returns Page Size.
     */
    public function getPageSize(): int
    {
        return $this->pageSize;
    }

    /**
     * Sets Page Size.
     *
     * @required
     * @maps page_size
     */
    public function setPageSize(int $pageSize): void
    {
        $this->pageSize = $pageSize;
    }

    /**
     * Returns Previous Page Uri.
     */
    public function getPreviousPageUri(): string
    {
        return $this->previousPageUri;
    }

    /**
     * Sets Previous Page Uri.
     *
     * @required
     * @maps previous_page_uri
     */
    public function setPreviousPageUri(string $previousPageUri): void
    {
        $this->previousPageUri = $previousPageUri;
    }

    /**
     * Returns Start.
     */
    public function getStart(): int
    {
        return $this->start;
    }

    /**
     * Sets Start.
     *
     * @required
     * @maps start
     */
    public function setStart(int $start): void
    {
        $this->start = $start;
    }

    /**
     * Returns Uri.
     */
    public function getUri(): string
    {
        return $this->uri;
    }

    /**
     * Sets Uri.
     *
     * @required
     * @maps uri
     */
    public function setUri(string $uri): void
    {
        $this->uri = $uri;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['end']               = $this->end;
        $json['first_page_uri']    = $this->firstPageUri;
        $json['messages']          = $this->messages;
        $json['next_page_uri']     = $this->nextPageUri;
        $json['page']              = $this->page;
        $json['page_size']         = $this->pageSize;
        $json['previous_page_uri'] = $this->previousPageUri;
        $json['start']             = $this->start;
        $json['uri']               = $this->uri;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
